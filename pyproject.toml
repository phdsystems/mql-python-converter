[project]
name = "mql-python-converter"
version = "0.1.0"
description = "MQL to Python converter with MT4 integration and backtesting framework"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Developer", email = "developer@example.com"}
]

dependencies = [
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "matplotlib>=3.3.0",
]

[project.optional-dependencies]
optimization = [
    "optuna>=3.0.0",
    "optuna-dashboard>=0.10.0",
    "hyperopt>=0.2.7",
    "hyperopt-sklearn>=0.1.0",
    "scikit-optimize>=0.9.0",
    "ray[tune]>=2.0.0",
    "ray[train]>=2.0.0",
    "nevergrad>=0.5.0",
    "ax-platform>=0.3.0",
    "botorch>=0.8.0",
    "gpytorch>=1.9.0",
    "smac>=2.0.0",
    "deap>=1.3.3",
    "scipy>=1.7.0",
    "joblib>=1.0.0",
    "plotly>=5.0.0",
    "tqdm>=4.62.0",
]

all = [
    "mql-python-converter[optimization]",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.uv]
dev-dependencies = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
    "black>=22.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[tool.ruff]
line-length = 100
target-version = "py38"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W"]
ignore = ["E501"]

[tool.black]
line-length = 100
target-version = ["py38"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false